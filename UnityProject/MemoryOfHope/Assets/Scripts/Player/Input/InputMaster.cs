//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player/Input/Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMaster : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMaster()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""2ba51e39-8f39-4695-8d99-c56cf57369e8"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""b4bc967c-b188-4d1e-a590-7a4f7dc46524"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""cbb6a423-44f6-4b10-8437-001b71891669"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""75bd5528-4e79-4dea-ab6a-7aba45b3089f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MovingOnMap"",
                    ""type"": ""Value"",
                    ""id"": ""84429ab2-2968-4199-b8b1-c58219159c38"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Prism"",
                    ""type"": ""Button"",
                    ""id"": ""fe029cfb-9718-4b07-a02a-ea75a2c27689"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractionModule"",
                    ""type"": ""Button"",
                    ""id"": ""d59e9e21-3b38-4794-9627-f5e53fdee26f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractionSelect"",
                    ""type"": ""Button"",
                    ""id"": ""4ddd3f0d-af99-47ab-8e03-59b3cbf1ba66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractionMove"",
                    ""type"": ""Value"",
                    ""id"": ""57dfab5c-cb93-497b-b7c0-185bd2334ee8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateCamera"",
                    ""type"": ""Value"",
                    ""id"": ""d9723e69-aa1c-447e-9a6c-de4a755069da"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Activate"",
                    ""type"": ""Button"",
                    ""id"": ""39873438-dc12-4275-b24a-704fffb8ae7a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""a32ebeac-0599-46f7-aa34-cc3704e01d5a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Laser"",
                    ""type"": ""Button"",
                    ""id"": ""68cf975d-66e2-48c6-86e0-f310b3bc209a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8b633f8c-c5f7-49bd-a38b-de5becec14da"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b75cb467-474d-4c68-8287-915b8e147414"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""49f0bc8e-44c4-4dd8-91b5-cc79c2fbf9f0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6f9ce7ab-85d6-43bd-9be9-30481d249e07"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d183bb9b-855a-40c1-9cef-ebb3a59a575e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d23cc520-506f-4d91-9a0d-3e0e6de44375"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""db862bd7-7c52-4616-a14d-a1e954c7de21"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ec76111c-eade-4157-acd5-5a0aa93f53c3"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""726261f8-f03b-46b1-b40f-669ab6cc3a38"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovingOnMap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3bc31474-8971-4c04-ae9a-7e94894757fa"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Prism"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0018cb57-2a93-4ced-9070-c7a579cff19f"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionModule"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0029b021-8a23-4b43-a666-56ae17ddd458"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractionSelect"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""793f95ae-f673-46e0-b65b-bd5507a32a64"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""InteractionMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b42a814-2a76-4dfe-a5a3-d26e7b8947b8"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a918800-e10b-45e2-b521-b1ba3e12224e"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Activate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a955e18a-b7aa-4043-8085-32977e5c1bc7"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""375e0f69-cc9b-4c45-bd43-fa977778d486"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Laser"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""faf62642-af1c-4a4f-b2e6-018b6f507abb"",
            ""actions"": [
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""c7d2ded5-ed53-42f5-a174-88813c2e62be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenInformationMenu"",
                    ""type"": ""Button"",
                    ""id"": ""7beb839e-928d-4189-860b-abbfde494ba5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenPauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""e01521fc-fd0f-401d-b86e-d2ddd8fc4d4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f2e73b73-b991-4b80-9ccd-50f24d232a6c"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3341b3a-41bc-4268-93bd-8f5709fa801b"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenPauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ffc8fa13-4ae3-4154-90e0-c5ff8dcc71ee"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenInformationMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MainMenuUI"",
            ""id"": ""2810612b-4414-42b0-808f-963dd5ebd342"",
            ""actions"": [
                {
                    ""name"": ""MainMenuGoRight"",
                    ""type"": ""Button"",
                    ""id"": ""4e254f84-7c00-4303-92ad-bc43b999da95"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainMenuGoLeft"",
                    ""type"": ""Button"",
                    ""id"": ""6a419309-098b-43dc-8e82-738c5c10fbc4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""add5f1b8-f9b8-47a3-a709-4346297591e1"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainMenuGoRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e535083-c36b-40eb-afa3-d330861feb81"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainMenuGoLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Attack = m_Player.FindAction("Attack", throwIfNotFound: true);
        m_Player_MovingOnMap = m_Player.FindAction("MovingOnMap", throwIfNotFound: true);
        m_Player_Prism = m_Player.FindAction("Prism", throwIfNotFound: true);
        m_Player_InteractionModule = m_Player.FindAction("InteractionModule", throwIfNotFound: true);
        m_Player_InteractionSelect = m_Player.FindAction("InteractionSelect", throwIfNotFound: true);
        m_Player_InteractionMove = m_Player.FindAction("InteractionMove", throwIfNotFound: true);
        m_Player_RotateCamera = m_Player.FindAction("RotateCamera", throwIfNotFound: true);
        m_Player_Activate = m_Player.FindAction("Activate", throwIfNotFound: true);
        m_Player_Dash = m_Player.FindAction("Dash", throwIfNotFound: true);
        m_Player_Laser = m_Player.FindAction("Laser", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Return = m_UI.FindAction("Return", throwIfNotFound: true);
        m_UI_OpenInformationMenu = m_UI.FindAction("OpenInformationMenu", throwIfNotFound: true);
        m_UI_OpenPauseMenu = m_UI.FindAction("OpenPauseMenu", throwIfNotFound: true);
        // MainMenuUI
        m_MainMenuUI = asset.FindActionMap("MainMenuUI", throwIfNotFound: true);
        m_MainMenuUI_MainMenuGoRight = m_MainMenuUI.FindAction("MainMenuGoRight", throwIfNotFound: true);
        m_MainMenuUI_MainMenuGoLeft = m_MainMenuUI.FindAction("MainMenuGoLeft", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Attack;
    private readonly InputAction m_Player_MovingOnMap;
    private readonly InputAction m_Player_Prism;
    private readonly InputAction m_Player_InteractionModule;
    private readonly InputAction m_Player_InteractionSelect;
    private readonly InputAction m_Player_InteractionMove;
    private readonly InputAction m_Player_RotateCamera;
    private readonly InputAction m_Player_Activate;
    private readonly InputAction m_Player_Dash;
    private readonly InputAction m_Player_Laser;
    public struct PlayerActions
    {
        private @InputMaster m_Wrapper;
        public PlayerActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Attack => m_Wrapper.m_Player_Attack;
        public InputAction @MovingOnMap => m_Wrapper.m_Player_MovingOnMap;
        public InputAction @Prism => m_Wrapper.m_Player_Prism;
        public InputAction @InteractionModule => m_Wrapper.m_Player_InteractionModule;
        public InputAction @InteractionSelect => m_Wrapper.m_Player_InteractionSelect;
        public InputAction @InteractionMove => m_Wrapper.m_Player_InteractionMove;
        public InputAction @RotateCamera => m_Wrapper.m_Player_RotateCamera;
        public InputAction @Activate => m_Wrapper.m_Player_Activate;
        public InputAction @Dash => m_Wrapper.m_Player_Dash;
        public InputAction @Laser => m_Wrapper.m_Player_Laser;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Attack.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAttack;
                @MovingOnMap.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovingOnMap;
                @MovingOnMap.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovingOnMap;
                @MovingOnMap.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovingOnMap;
                @Prism.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPrism;
                @Prism.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPrism;
                @Prism.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPrism;
                @InteractionModule.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractionModule;
                @InteractionModule.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractionModule;
                @InteractionModule.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractionModule;
                @InteractionSelect.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractionSelect;
                @InteractionSelect.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractionSelect;
                @InteractionSelect.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractionSelect;
                @InteractionMove.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractionMove;
                @InteractionMove.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractionMove;
                @InteractionMove.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractionMove;
                @RotateCamera.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotateCamera;
                @RotateCamera.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotateCamera;
                @RotateCamera.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotateCamera;
                @Activate.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnActivate;
                @Activate.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnActivate;
                @Activate.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnActivate;
                @Dash.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnDash;
                @Laser.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLaser;
                @Laser.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLaser;
                @Laser.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLaser;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @MovingOnMap.started += instance.OnMovingOnMap;
                @MovingOnMap.performed += instance.OnMovingOnMap;
                @MovingOnMap.canceled += instance.OnMovingOnMap;
                @Prism.started += instance.OnPrism;
                @Prism.performed += instance.OnPrism;
                @Prism.canceled += instance.OnPrism;
                @InteractionModule.started += instance.OnInteractionModule;
                @InteractionModule.performed += instance.OnInteractionModule;
                @InteractionModule.canceled += instance.OnInteractionModule;
                @InteractionSelect.started += instance.OnInteractionSelect;
                @InteractionSelect.performed += instance.OnInteractionSelect;
                @InteractionSelect.canceled += instance.OnInteractionSelect;
                @InteractionMove.started += instance.OnInteractionMove;
                @InteractionMove.performed += instance.OnInteractionMove;
                @InteractionMove.canceled += instance.OnInteractionMove;
                @RotateCamera.started += instance.OnRotateCamera;
                @RotateCamera.performed += instance.OnRotateCamera;
                @RotateCamera.canceled += instance.OnRotateCamera;
                @Activate.started += instance.OnActivate;
                @Activate.performed += instance.OnActivate;
                @Activate.canceled += instance.OnActivate;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Laser.started += instance.OnLaser;
                @Laser.performed += instance.OnLaser;
                @Laser.canceled += instance.OnLaser;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Return;
    private readonly InputAction m_UI_OpenInformationMenu;
    private readonly InputAction m_UI_OpenPauseMenu;
    public struct UIActions
    {
        private @InputMaster m_Wrapper;
        public UIActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Return => m_Wrapper.m_UI_Return;
        public InputAction @OpenInformationMenu => m_Wrapper.m_UI_OpenInformationMenu;
        public InputAction @OpenPauseMenu => m_Wrapper.m_UI_OpenPauseMenu;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Return.started -= m_Wrapper.m_UIActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnReturn;
                @OpenInformationMenu.started -= m_Wrapper.m_UIActionsCallbackInterface.OnOpenInformationMenu;
                @OpenInformationMenu.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnOpenInformationMenu;
                @OpenInformationMenu.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnOpenInformationMenu;
                @OpenPauseMenu.started -= m_Wrapper.m_UIActionsCallbackInterface.OnOpenPauseMenu;
                @OpenPauseMenu.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnOpenPauseMenu;
                @OpenPauseMenu.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnOpenPauseMenu;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
                @OpenInformationMenu.started += instance.OnOpenInformationMenu;
                @OpenInformationMenu.performed += instance.OnOpenInformationMenu;
                @OpenInformationMenu.canceled += instance.OnOpenInformationMenu;
                @OpenPauseMenu.started += instance.OnOpenPauseMenu;
                @OpenPauseMenu.performed += instance.OnOpenPauseMenu;
                @OpenPauseMenu.canceled += instance.OnOpenPauseMenu;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // MainMenuUI
    private readonly InputActionMap m_MainMenuUI;
    private IMainMenuUIActions m_MainMenuUIActionsCallbackInterface;
    private readonly InputAction m_MainMenuUI_MainMenuGoRight;
    private readonly InputAction m_MainMenuUI_MainMenuGoLeft;
    public struct MainMenuUIActions
    {
        private @InputMaster m_Wrapper;
        public MainMenuUIActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @MainMenuGoRight => m_Wrapper.m_MainMenuUI_MainMenuGoRight;
        public InputAction @MainMenuGoLeft => m_Wrapper.m_MainMenuUI_MainMenuGoLeft;
        public InputActionMap Get() { return m_Wrapper.m_MainMenuUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainMenuUIActions set) { return set.Get(); }
        public void SetCallbacks(IMainMenuUIActions instance)
        {
            if (m_Wrapper.m_MainMenuUIActionsCallbackInterface != null)
            {
                @MainMenuGoRight.started -= m_Wrapper.m_MainMenuUIActionsCallbackInterface.OnMainMenuGoRight;
                @MainMenuGoRight.performed -= m_Wrapper.m_MainMenuUIActionsCallbackInterface.OnMainMenuGoRight;
                @MainMenuGoRight.canceled -= m_Wrapper.m_MainMenuUIActionsCallbackInterface.OnMainMenuGoRight;
                @MainMenuGoLeft.started -= m_Wrapper.m_MainMenuUIActionsCallbackInterface.OnMainMenuGoLeft;
                @MainMenuGoLeft.performed -= m_Wrapper.m_MainMenuUIActionsCallbackInterface.OnMainMenuGoLeft;
                @MainMenuGoLeft.canceled -= m_Wrapper.m_MainMenuUIActionsCallbackInterface.OnMainMenuGoLeft;
            }
            m_Wrapper.m_MainMenuUIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MainMenuGoRight.started += instance.OnMainMenuGoRight;
                @MainMenuGoRight.performed += instance.OnMainMenuGoRight;
                @MainMenuGoRight.canceled += instance.OnMainMenuGoRight;
                @MainMenuGoLeft.started += instance.OnMainMenuGoLeft;
                @MainMenuGoLeft.performed += instance.OnMainMenuGoLeft;
                @MainMenuGoLeft.canceled += instance.OnMainMenuGoLeft;
            }
        }
    }
    public MainMenuUIActions @MainMenuUI => new MainMenuUIActions(this);
    public interface IPlayerActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnMovingOnMap(InputAction.CallbackContext context);
        void OnPrism(InputAction.CallbackContext context);
        void OnInteractionModule(InputAction.CallbackContext context);
        void OnInteractionSelect(InputAction.CallbackContext context);
        void OnInteractionMove(InputAction.CallbackContext context);
        void OnRotateCamera(InputAction.CallbackContext context);
        void OnActivate(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnLaser(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnReturn(InputAction.CallbackContext context);
        void OnOpenInformationMenu(InputAction.CallbackContext context);
        void OnOpenPauseMenu(InputAction.CallbackContext context);
    }
    public interface IMainMenuUIActions
    {
        void OnMainMenuGoRight(InputAction.CallbackContext context);
        void OnMainMenuGoLeft(InputAction.CallbackContext context);
    }
}
